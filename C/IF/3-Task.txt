func (m *model) updateTaskModel() {
	m.menuTasksModel.choices = getTopicTasks(m.menuTopicModel.choices[m.menuTopicModel.cursor])
	m.menuTasksModel.topic = m.menuTopicModel.choices[m.menuTopicModel.cursor]
}

func (m *model) updateEditorModel() {
	filepath := fmt.Sprintf("C/%s/%s.txt",
		m.menuTopicModel.choices[m.menuTopicModel.cursor],
		m.menuTasksModel.choices[m.menuTasksModel.cursor])
	m.textEditorModel.filepath = filepath
	data, err := os.ReadFile(filepath)
	if err != nil {
		data = []byte("Yangi fayl. Matnni o'zgartiring...\n")
	}
	m.textEditorModel.content = []rune(string(data))
}

func getTopicTasks(topic string) []string {
	var tasks []string
	var taskCount int

	switch topic {
	case "IF":
		taskCount = 20
	case "LOOP", "NESTED LOOP":
		taskCount = 25
	case "ARRAY":
		taskCount = 20
	case "STRING":
		taskCount = 15
	}

	for i := 1; i <= taskCount; i++ {
		tasks = append(tasks, fmt.Sprintf("%d-Task", i))
	}
	return tasks
}